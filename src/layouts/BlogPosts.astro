---
import PageHeader from '../components/PageHeader/index.astro';
import Pagination from '../components/Pagination/index.astro';
import PostCard from '../components/PostCard/index.astro';
import SiteNav from '../components/SiteNav/index.astro';
import SkipToContent from '../components/SkipToContent/index.astro';
import type { Post } from '../utils/post';
import BaseLayout from './Base/index.astro';

interface Props {
	posts: Post[];
	title?: string;
	baseUrl: string;
	currentUrl: string;
	currentPage: number;
	lastPage: number;
	prevUrl?: string;
	nextUrl?: string;
	start: number;
	end: number;
	total: number;
	size: number;
}

const BLOG_URL = Astro.site?.href;

const {
	title = '',
	posts,
	baseUrl,
	currentUrl,
	currentPage,
	lastPage,
	prevUrl,
	nextUrl,
	start,
	end,
	total,
	size
} = Astro.props;
---
<BaseLayout
	htmlTitle={[title, 'TorontoJS Blog'].filter(Boolean)}
	title={title ?? 'TorontoJS Blog'}
	description="The blog is about the TorontoJS community and news about JavaScript, web development, and programming in the Greater Toronto Area."
	tags={['development', 'javascript', 'toronto', 'community', 'blog']}
	url={currentUrl}
	hasFeed={true}
	pageSchema="Blog"
>
	<SkipToContent
		slot="header"
		target="posts-list"
	/>
	<SiteNav slot="header" />
	<PageHeader slot="header">
		<slot name="header"></slot>
	</PageHeader>

	<div id="posts-list" class="space-y-8">
		{
			posts.map((post) => (
				<PostCard
					variant="large"
					url={post.url}
					title={post.data.title}
					createdAt={post.data.createdAt.toISOString()}
					image={post.data.image}
					imageAlt={post.data.imageAlt}
					tags={post.data.tags}
				>
					<span slot="title">{post.data.title}</span> {post.data.summary}
				</PostCard>
			))
		}
	</div>

	<footer slot="footer">
		<Pagination
			{baseUrl}
			{currentPage}
			{lastPage}
			{prevUrl}
			{nextUrl}
			{start}
			{end}
			{total}
			{size}
		/>
	</footer>
</BaseLayout>
